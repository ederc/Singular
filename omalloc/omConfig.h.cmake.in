/* -*-c++-*- */
/*******************************************************************
 *  File:    omConfig.h.in
 *  Purpose: configuration for omalloc
 *  Author:  obachman (Olaf Bachmann)
 *  Created: 11/99
 *  Version: $Id: omConfig.h.in,v 1.9 2001/04/30 09:02:03 Singular Exp $
 *******************************************************************/
#ifndef OM_CONFIG_H
#define OM_CONFIG_H

/*******************************************************************
 * Defines which are set by configure
 ******************************************************************/
/* define if you provide an external config file to be included
   by omDefaultConfig.h */
#ifndef OM_HAVE_EXTERNAL_CONFIG_H
#cmakedefine OM_HAVE_EXTERNAL_CONFIG_H 1
#endif
/* define if you can inline */
#ifndef OM_INLINE
#cmakedefine OM_INLINE @OM_INLINE@
#endif
/* define for inline decl in headers */
#ifndef OM_INLINE_DECL
#cmakedefine OM_INLINE_DECL @OM_INLINE_DECL@
#endif
/* define for inline implementation in Include*/
#ifndef OM_INLINE_IMPL
#cmakedefine OM_INLINE_IMPL @OM_INLINE_IMPL@
#endif
/* define for local inline */
#ifndef OM_INLINE_LOCAL
#cmakedefine OM_INLINE_LOCAL @OM_INLINE_LOCAL@
#endif
/* defint to nothing if you do not understand const */
#ifndef const
#undef const
#endif
/* define to the name of addr2line program, undef otherwise */
#ifndef OM_PROG_ADDR2LINE
#cmakedefine OM_PROG_ADDR2LINE "@OM_PROG_ADDR2LINE@"
#endif
/* define to the name of nm program, undef otherwise */
#ifndef OM_PROG_NM
#cmakedefine OM_PROG_NM
#endif
/* define if you have popen */
#ifndef HAVE_POPEN
#cmakedefine HAVE_POPEN 1
#endif
/* define if you have readlink */
#ifndef HAVE_READLINK
#cmakedefine HAVE_READLINK 1
#endif
/* define if you have sbrk */
#ifndef HAVE_SBRK
#cmakedefine HAVE_SBRK 1
#endif
/* define if you have getcwd */
#ifndef HAVE_GETCWD
#cmakedefine HAVE_GETCWD 1
#endif
/* define if you have getwd */
#ifndef HAVE_GETWD
#cmakedefine HAVE_GETWD 1
#endif
/* define if you have a working mmap */
#ifndef HAVE_WORKING_MMAP
#cmakedefine HAVE_WORKING_MMAP 1
#endif
/* define if you have STDC_HEADERS */
#ifndef STDC_HEADERS
#cmakedefine STDC_HEADERS 1
#endif
/* define if you have unistd.h */
#ifndef HAVE_UNISTD_H
#cmakedefine HAVE_UNISTD_H 1
#endif
/* define if you have fcntl.h */
#ifndef HAVE_FCNTL_H
#cmakedefine HAVE_FCNTL_H
#endif
/* define if you have sys/mman.h */
#ifndef HAVE_SYS_MMAN_H
#cmakedefine HAVE_SYS_MMAN_H
#endif
/* define if GET_RETURN_ADDR works */
#ifndef OM_GET_RETURN_ADDR_WORK
#cmakedefine OM_GET_RETURN_ADDR_WORKS 1
#endif
/* define if GET_RETURN_ADDR works */
#ifndef OM_GET_BACKTRACE_WORK
#cmakedefine OM_GET_BACKTRACE_WORKS 1
#endif
/* Define sizeof(long) */
#ifndef SIZEOF_LONG
#cmakedefine SIZEOF_LONG @SIZEOF_LONG@
#endif
/* Define sizeof(double) */
#ifndef SIZEOF_DOUBLE
#cmakedefine SIZEOF_DOUBLE @SIZEOF_DOUBLE@
#endif
/* Define sizeof(size_t) */
#ifndef SIZEOF_SIZE_T
#cmakedefine SIZEOF_SIZE_T @SIZEOF_SIZE_T@
#endif
#ifndef SIZEOF_SYSTEM_PAGE
/* Define pagesize of your system */
#define SIZEOF_SYSTEM_PAGE 4096
#endif
#ifndef SIZEOF_OM_PAGE
/* size of page as we can use it */
#define SIZEOF_OM_PAGE SIZEOF_SYSTEM_PAGE
#endif
/* define if you want to use mmap for valloc */
#ifndef OM_HAVE_VALLOC_MMAP
#cmakedefine OM_HAVE_VALLOC_MMAP 1
#endif
/* define if you want to use malloc-provided valloc */
#ifndef HAVE_VALLOC_MALLOC
#cmakedefine OM_HAVE_VALLOC_MALLOC 1
#endif
#ifndef OM_MALLOC_PROVIDES_SIZEOF_ADDR
/* define if your malloc provides a working OM_MALLOC_SIZEOF_ADDR */
#cmakedefine OM_MALLOC_PROVIDES_SIZEOF_ADDR
#endif
#ifndef OM_EMULATE_OMALLOC
/* define if you only want to emulate omalloc, but not actually use it */
#cmakedefine OM_EMULATE_OMALLOC 1
#endif
#ifndef OM_ALIGN_8
/* define if you want your memory to be 8-aligned */
#cmakedefine OM_ALIGN_8 1
#endif
#ifndef OM_ALIGNMENT_NEEDS_WORK
/* define if you insist on AllocAligned returnes 8-aligned */
#cmakedefine OM_ALIGNMENT_NEEDS_WORK 1
#endif
/* define if you want to have a dense distribution of bins */
#ifndef OM_HAVE_DENSE_BIN_DISTRIBUTION
#cmakedefine OM_HAVE_DENSE_BIN_DISTRIBUTION 1
#endif
/* define to disable all debugging stuff */
#ifndef OM_NDEBUG
#cmakedefine OM_NDEBUG 1
#endif
/* define to enable debug tracking */
#ifndef OM_HAVE_TRACK
#cmakedefine OM_HAVE_TRACK 1
#endif
/* define to enable tracking of files/line numbers */
#ifndef OM_TRACK_FILE_LINE
#cmakedefine OM_TRACK_FILE_LINE 1
#endif
/* define to enable tracking of return addresses */
#ifndef OM_TRACK_RETURN
#cmakedefine OM_TRACK_RETURN 1
#endif
/* define to enable tracking of stack backtraces */
#ifndef OM_TRACK_BACKTRACE
#cmakedefine OM_TRACK_BACKTRACE 1
#endif
/* define to enable tracking of custom value */
#ifndef OM_TRACK_CUSTOM
#cmakedefine OM_TRACK_CUSTOM 1
#endif
/* define to enable internal debugging */
#ifndef OM_INTERNAL_DEBUG
#cmakedefine OM_INTERNAL_DEBUG 1
#endif
/* define to -1/0/1/2/3 if you want omalloc to provide
   "underlying malloc"/no/normal/debug ANSI-C conforming
   malloc/calloc/realloc/free funcs */
#ifndef OM_PROVIDE_MALLOC
#define OM_PROVIDE_MALLOC 0
#endif
#endif /* OM_CONFIG_H  */
/* define if omalloc depends on "external" malloc functions like
   those provided by the system -- if this id defined, an application
   linking with omalloc needs to assure that a library containing malloc
   is linked, as well */
#ifndef OMALLOC_USES_MALLOC
#cmakedefine OMALLOC_USES_MALLOC 1
#endif
