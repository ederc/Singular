int i; i;
i = i + 8; i;
int j = 9; j;
j = -i -9; j;
int k1 = 1,2;
int l1 = 2147483647; l1; // max integer representation
int k3 = k3+1; k3;       // k3 is initialize to 0 and then incremented;
int ll = l1 + 1;ll;
listvar(all);
// --------- some help variables
ring r;
poly p = x23+y+z12;
matrix m[2][3] = 1,2,3,4;
ideal id = x,y,z;
ideal sid = std(id);
string st = "ab cde fghi";
// ---------------- int operations
"20 + 4 =", 20 + 4;
"20 - 4 =", 20 - 4;
"20 * 4 =", 20 * 4;
"20 / 4 =", 20 / 4;
"20 ^ 4 =", 20 ^ 4;
"20 % 4 =", 20 % 4;
"20 > 4 =", 20 > 4;
"20 < 4 =", 20 < 4;
"20 & 4 =", 20 & 4;
"20 | 4 =", 20 | 4;
"20 <> 4 =", 20 <> 4;
"20 == 4 =", 20 == 4;
"20 <= 4 =", 20 <= 4;
"20 >= 4 =", 20 >= 4;
"20 and 4 =", 20 and 4;
"20 or 4 =", 20 or 4;
"-(20 + 4) =", -(20 + 4);
i;i++;
"i++ = setting i!!!";
i;i--;
"i-- = setting i!!!";
i;
// ---------------- int commands
i = char(r); "char r", i;
i = ncols(m); "cols m 3", i;
i = nrows(m); "rows m 2", i;
i = vdim(sid); "vdim std(id)",i;
i = dim(sid); "dim std(id)",i;
i = mult(sid); "mult std(id)",i;
i = size(id); "size id 3",i;
i = size(p); "size p 3",i;
i = size("aaaaaaaaaaaaaaaaaaa"); "size ...19", i;
i = size(st); "size st 11", i;
i = echo; "echo",i;
i = pagewidth; "pagewidth", i;
i = timer; "timer";
i = TRACE;"TRACE", i;
i = voice;"voice 1", i;
i = rvar(x); "is x a ringvar ",i;
i = rvar(y); "is y a ringvar ",i;
i = rvar(q); "is q a ringvar ",i;
i = rvar(r); "is r a ringvar ",i;
i = random(3,80);"this is random and should differ",i-i;
i = defined(i);"is i defined ", i;
i = ord(x);"ord x ", i;
i = ord(p^5);"ord p^5 ", i;
i = prime(28);"next prime <= 28 is ", i;

"------------- errors ---------------";

int i;
int k =;
int k = 1 2;
int k = 1..2;
int k = [1,2];
int long1 = 12333333333333333333;
int long2 = 2147483648;

int ir1 = r;
int ir2 = p;
int ir3 = m;
int ir4 = "aaaaaaaaaaa";
listvar(all);
// ---------------- wrong int commands
i;
i = char(id);
i = ncols(p);
i = nrows(p);
i = vdim(m);
i = dim(r);
i = mult(p);
i = size(r);
i = random(3);
i = random(3,55,555);
i = defined();
i = defined(r,m);
i = defined(r,);
i = defined(,r);
i = ord();
i = ord(r);
i = ord(i);
i = prime(28,5);
prime(-28);
prime();
prime(1);
prime(r);
prime(2,r);
" ---------------- wrong int operations";
20 + ;
20 - ;
20 * ;
20 / ;
20 ^ ;
20 % ;
20 > ;
20 < ;
20 & ;
20 | ;
20 <> ;
20 == ;
20 <= ;
20 >= ;
20 and ;
20 or ;
-(20 + 4;
// matrix operations -----------------------------------
20 + m;
20 - m;
20 * m;
20 / m;
20 ^ m;
20 % m;
20 > m;
20 < m;
20 & m;
20 | m;
20 <> m;
20 == m;
20 <= m;
20 >= m;
20 and m;
20 or m;
-(20 + m);
m + 20;
m - 20;
m * 20;
m / 20;
m ^ 20;
m % 20;
m > 20;
m < 20;
m & 20;
m | 20;
m <> 20;
m == 20;
m <= 20;
m >= 20;
m and 20;
m or 20;
-(m + 20);
// string operations -----------------------------------
20 + st;
20 - st;
20 * st;
20 / st;
20 ^ st;
20 % st;
20 > st;
20 < st;
20 & st;
20 | st;
20 <> st;
20 == st;
20 <= st;
20 >= st;
20 and st;
20 or st;
-(20 + st);
st + 20;
st - 20;
st * 20;
st / 20;
st ^ 20;
st % 20;
st > 20;
st < 20;
st & 20;
st | 20;
st <> 20;
st == 20;
st <= 20;
st >= 20;
st and 20;
st or 20;
-(st + 20);
// poly operations -----------------------------------
20 + p;
20 - p;
20 * p;
//20 / p;
20 / x;
20 ^ p;
20 % p;
20 > p;
20 < p;
20 & p;
20 | p;
20 <> p;
20 == p;
20 <= p;
20 >= p;
20 and p;
20 or p;
-(20 + p);
p + 20;
p - 20;
p * 20;
p / 20;
p ^ 20;
p % 20;
p > 20;
p < 20;
p & 20;
p | 20;
p <> 20;
p == 20;
p <= 20;
p >= 20;
p and 20;
p or 20;
-(p + 20);
// ring operations -----------------------------------
20 + r;
20 - r;
20 * r;
20 / r;
20 ^ r;
20 % r;
20 > r;
20 < r;
20 & r;
20 | r;
20 <> r;
20 == r;
20 <= r;
20 >= r;
20 and r;
20 or r;
-(20 + r);
r + 20;
r - 20;
r * 20;
r / 20;
r ^ 20;
r % 20;
r > 20;
r < 20;
r & 20;
r | 20;
r <> 20;
r == 20;
r <= 20;
r >= 20;
r and 20;
r or 20;
-(r + 20);
// ideal operations -----------------------------------
20 + id;
20 - id;
20 * id;
20 / id;
20 ^ id;
20 % id;
20 > id;
20 < id;
20 & id;
20 | id;
20 <> id;
20 == id;
20 <= id;
20 >= id;
20 and id;
20 or id;
-(20 + id);
id + 20;
id - 20;
id * 20;
id / 20;
id ^ 20;
id % 20;
id > 20;
id < 20;
id & 20;
id | 20;
id <> 20;
id == 20;
id <= 20;
id >= 20;
id and 20;
id or 20;
-(id + 20);
LIB "tst.lib";tst_status(1);$
